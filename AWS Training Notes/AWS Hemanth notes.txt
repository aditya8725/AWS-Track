AWS: IAAS, PAAS
1. VPC // Network
2. EC2 // Instances
3. S3 // Simple Storage Service -> Actually IAAS not for end users File share, block or virutal disk share storage, Object store(for raw data)
 
EBS for frequent read write because it wont charge
S3 for non frequnct read write
 
AWS Storage Service:
1. Object Store (S3): Used for "Raw" data (unprocessed data)
Pay per use, charged for storage and transaction (read/write).
Individual unit is called Bucket and data stored in bucket called "Object".
 
2. Block Store (EBS):
Provide "Virtual Disk" based storage used by other AWS Service like EC2 instance.
 
Individual unit is called "Volume" and volumes can be "mounted" inside an EC2 instance as "Disk Partition" eg.One EC2 have two volumes
first one is  for "C://" and second one could be "D://"
 
3. Elastic File System (EFS):
Network filesystem can be mounted in multiple ec2 instance.
 
AWS CLI:
-Connected Line Interface for "mostly" could admins.
-Can be automared.
-Complex and difficult to master
 
aws s3 ls ::::> List all the S3 Buckets
 
$ aws configure
$ aws std get-caller-identity
$ aws s3 ls
 
----------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
C:\Users\HEMANTS7\Desktop\AWS\demo-2\target>java -jar demo-2-1.0.jar "D:\\data.txt"
 
  .   ____          _            __ _ _
/\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
\\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
=========|_|==============|___/=/_/_/_/
:: Spring Boot ::                (v3.2.3)
 
2024-03-05T14:14:11.991+05:30  INFO 13656 --- [           main] com.hemant.demo2.Demo2Application        : Starting Demo2Application v1.0 using Java 17.0.1 with PID 13656 (C:\Users\HEMANTS7\Desktop\AWS\demo-2\target\demo-2-1.0.jar started by hemants7 in C:\Users\HEMANTS7\Desktop\AWS\demo-2\target)
2024-03-05T14:14:11.995+05:30  INFO 13656 --- [           main] com.hemant.demo2.Demo2Application        : No active profile set, falling back to 1 default profile: "default"
2024-03-05T14:14:12.641+05:30  INFO 13656 --- [           main] com.hemant.demo2.Demo2Application        : Started Demo2Application in 1.314 seconds (process running for 1.98)
File to be uploaded to bucket : D:\\data.txt
hemantbucket16
File D:\\data.txt uploaded successfully
 
C:\Users\HEMANTS7\Desktop\AWS\demo-2\target>
 
-----------------------------------------------------------------------------------------------------------------
 
"C:\Program Files\jdk-17.0.1\bin\java.exe" -jar <jar file name>
 
VPC->enable enable last wale , yes - no, -> RDS
 
Standar create
mysql
version mssql
free tier
id 
admin
password
20 gb (genral purpose)
no disables
dont create
dont connect
create subnet
public
password authentication
do not select rds proxiy
create new with inbound rule
no preference
 
 
Use vscode to connect or cli but we use vs
Mysql plugin extention in vs code byh jun han // dont use
to connect with mysql
my sql from waygen sen offcial one
connet to server
connect connection
View connection detail for hostname paste host, database, password
 
 
fixing security group inbouyt
status- available
click data base name for summary
in conncectivuty option under security secusrity group name must be public
 
ipv4 -> inbound
edit add one mysql/ Aurorra under type,
dns resolution enabled
 
connected using cloud shell
 
mysql -- version
mysql -uadmin -pPassword$1234 -h(endpoint dalna h )
 
RDS Instance creation check-list
 
1. Find existing VPC with Public Subnet, write down the name / id of VPC
Search under rds > subnet group it must be public ser group
 
2. Create new RDS with "Standard create" option
	- Engine : MySQL (Aruroa MySQL, MariaDB)
	- Plan : Free Tier Eligible
3. Set the PASSWORD for new instance
4. choose the VPC from step-1
5. Choose option to "create new security group" use unique name for security group
	"sg-YOUNAME"
6. Set Public Access : YES
7. Accept all the defaults and c
lick "Create Database"
8. In "Advance Options", disable "Storage Autoscaling"
8. Wait for Database to be ready! and then click "Get Access Credentials"
9. Copy endpoint & password
10. Use "Cloud Shell" from the webconsole.
11. Use following commands in cloud shell
 
	$ mysql --version
	$ mysql -hENDPOINT -pPASSWORD -uUSER
	mysql (none) > create database sampledb;
	mysql (none) > use sampledb;
	mysql (sampledb) >
	mysql (sampledb) > create table emps (empid int primary key auto_increment, ename varchar(20));
	mysql (sampledb) > insert into emps (ename) values ('Dharmendra');
	mysql (sampledb) > insert into emps (ename) values ('Gajendra');
	mysql (sampledb) > insert into emps (ename) values ('Narendra');
	mysql (sampledb) > insert into emps (ename) values ('Rajendra');
	mysql (sampledb) > insert into emps (ename) values ('Surendra');
	mysql (sampledb) > commit;
----------------------------------------------------------------------------------------------------------------------------------------------------------
Message driven architecture: Indirect communication, to remove dependency between the applications.
 
1. Amazon SQS; simple queue service, one sender to one receiver , point to point fully managed service.
 
2. Amazon SNS; simple notification service, publish and subscribe model of communication, single publisher to all of the subscriber.
 
3. Amazon MQ; message queue, managed instance of either Apache Active MQ or RabbitMQ service
Existing applicaiton that uses "ActiveMQ" or "RabbitMQ" couble be integerated / migrated to "Amazon MQ" with minimum code change.
----------------------------------------------------------------------------------------------------------------------------------------------------------
 
Locate
 
Java 17 Dev Environment
-------------------------
 
Locate your JDK-17 Installation directories
 
My System:
C:\Program Files\Java\jdk-17
 
Your System:
C:\Program Files\jdk-17.0.1
 
Setup USER Environment Variable:
Start Menu > type "ENV" > "Edit Env Vars for YOUR account"
 
in "User Variables" section, click "NEW" button to create :
	Env Name: JAVA_HOME
	Value : C:\Program Files\jdk-17.0.1
 
Select another Variable "PATH" and click "Edit"
Add new value "%JAVA_HOME%\bin" (No space anywhere inside this value)
 
Remove any JDK path from "PATH" variable (of an older JDK)
 
"Install" apache maven from Self Service portal.
Folder to extract "C:\"
 
Locate the folder in windows explorer and find the "bin" folder
your BIN folder path should be : 
	C:\apache-maven-3.9.5\bin
 
Edit Env Var for "Your Account" and add new Entry in "Path" variable
C:\apache-maven-3.9.5\bin
 
OPen a new CMD and try following commands:
javac -version
java -version
mvn --version
 
Every  "generated" maven project is by default configured to use OLDER java version
If properties section is missing, add new
 
<properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
<maven.compiler.source>17</maven.compiler.source>
<maven.compiler.target>17</maven.compiler.target>
</properties>
 
From "dependencies" remove the "JUnit" dependency
 
Add "SqS" dependecies for AWS SQS Service
 
<!-- https://mvnrepository.com/artifact/software.amazon.awssdk/sqs -->
<dependency>
<groupId>software.amazon.awssdk</groupId>
<artifactId>sqs</artifactId>
<version>2.25.2</version>
</dependency>
 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
                      SNS (Simple Notification Service)
 
Publisher broadcast message to different Subscribers
Message Delivery Channels consists of Email, Sms, Push Notification (Android / iOS)
 
Create two temporary mail using temp mail site.
Creating SNS Service:
1. Create topic : name of topic - news
2. Type : Standard (Best)
3. Display name : latest news
4. Create topic
 
5. Add subscriber
6. Protocol : Email plain text
7. In endpoint add temp mail
add scond subcriber also.
both receive confirmation mail so confirm it
 
Message detail
Subject: there is a strike
message body :  As i am going to office there is no availability of auto in the city.
message attributes:
String, city, pune
String, category, general-news
 
------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                            PAAS SERVICE - RDS
                                                        Similary we have BeanStalk
 
Elastic Beanstalk is a service for deploying and scaling web applications and services. 
Upload your code and Elastic Beanstalk automatically handles the deploymentâ€”from 
capacity provisioning, load balancing, and auto scaling to application health monitoring.
 
Has a Reverse proxy http server -> apache or nginx
 
Elastic BeanStalk:
1. Create Application webserver or worker(long running process)
2. App-name
3. Environamnename
4. Domain : hemantbs
5. Plateform : Java
6. Plateform Branch : Coretto 21 // 17 kr
7. sample application
application code:
version label 1.0
upload your code
local file: select two file index.html, main.cpp then compress them both (index must be at root level) named app1
Upload it
Preset : single instance free tier
 
Serivce access:
Use existing
key101
ec2 : hemant
choose vpc;
choose only PUBLIC available in all zones
skip to next
 
4th page:
Use basic healpth monitoriing
Managed updated:activated 8pm utc | or remove
email notification :
 
Microsoft Windows [Version 10.0.19045.4046]
(c) Microsoft Corporation. All rights reserved.
 
C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb>cd emp-demo
 
C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo>nvm package
'nvm' is not recognized as an internal or external command,
operable program or batch file.
 
C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo>mvn package
[INFO] Scanning for projects...
[INFO]
[INFO] -----------------------< com.mahendra:emp-demo1 >-----------------------
[INFO] Building emp-demo1 1.0
[INFO]   from pom.xml
[INFO] --------------------------------[ war ]---------------------------------
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-war-plugin/3.4.0/maven-war-plugin-3.4.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-war-plugin/3.4.0/maven-war-plugin-3.4.0.pom (8.4 kB at 18 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-war-plugin/3.4.0/maven-war-plugin-3.4.0.jar
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-war-plugin/3.4.0/maven-war-plugin-3.4.0.jar (83 kB at 1.5 MB/s)
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.pom
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.pom (356 B at 22 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.pom
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.pom (13 kB at 234 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/net/java/jvnet-parent/1/jvnet-parent-1.pom
Downloaded from central: https://repo.maven.apache.org/maven2/net/java/jvnet-parent/1/jvnet-parent-1.pom (4.7 kB at 147 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.0/jackson-databind-2.16.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.0/jackson-databind-2.16.0.pom (21 kB at 562 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-base/2.16.0/jackson-base-2.16.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-base/2.16.0/jackson-base-2.16.0.pom (11 kB at 366 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-bom/2.16.0/jackson-bom-2.16.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-bom/2.16.0/jackson-bom-2.16.0.pom (18 kB at 588 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-parent/2.16/jackson-parent-2.16.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/jackson-parent/2.16/jackson-parent-2.16.pom (6.5 kB at 204 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/oss-parent/56/oss-parent-56.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/oss-parent/56/oss-parent-56.pom (24 kB at 760 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.0/jackson-annotations-2.16.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.0/jackson-annotations-2.16.0.pom (7.1 kB at 25 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.0/jackson-core-2.16.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.0/jackson-core-2.16.0.pom (9.9 kB at 318 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/jsp/jsp-api/2.2/jsp-api-2.2.pom
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/jsp/jsp-api/2.2/jsp-api-2.2.pom (5.3 kB at 172 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/glassfish/web/jsp/2.2/jsp-2.2.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/glassfish/web/jsp/2.2/jsp-2.2.pom (6.9 kB at 147 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.jar
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.jar (414 kB at 4.9 MB/s)
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.0/jackson-databind-2.16.0.jar
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.0/jackson-core-2.16.0.jar
Downloading from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.0/jackson-annotations-2.16.0.jar
Downloading from central: https://repo.maven.apache.org/maven2/javax/servlet/jsp/jsp-api/2.2/jsp-api-2.2.jar
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar (85 kB at 1.6 MB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.0/jackson-annotations-2.16.0.jar (78 kB at 400 kB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/javax/servlet/jsp/jsp-api/2.2/jsp-api-2.2.jar (50 kB at 243 kB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.0/jackson-core-2.16.0.jar (579 kB at 1.6 MB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.0/jackson-databind-2.16.0.jar (1.6 MB at 2.7 MB/s)
[INFO]
[INFO] --- resources:3.3.1:resources (default-resources) @ emp-demo1 ---
[INFO] skip non existing resourceDirectory C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\src\main\resources
[INFO]
[INFO] --- compiler:3.11.0:compile (default-compile) @ emp-demo1 ---
[INFO] Changes detected - recompiling the module! :dependency
[INFO] Compiling 4 source files with javac [debug target 11] to target\classes
[WARNING] system modules path not set in conjunction with -source 11
[INFO] /C:/Users/HEMANTS7/Downloads/aws-kpit-main/aws-kpit-main/demos/11-beanstalk-javaweb/emp-demo/src/main/java/com/mahendra/employees/EmployeeList.java: C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\src\main\java\com\mahendra\employees\EmployeeList.java uses unchecked or unsafe operations.
[INFO] /C:/Users/HEMANTS7/Downloads/aws-kpit-main/aws-kpit-main/demos/11-beanstalk-javaweb/emp-demo/src/main/java/com/mahendra/employees/EmployeeList.java: Recompile with -Xlint:unchecked for details.
[INFO]
[INFO] --- resources:3.3.1:testResources (default-testResources) @ emp-demo1 ---
[INFO] skip non existing resourceDirectory C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\src\test\resources
[INFO]
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ emp-demo1 ---
[INFO] No sources to compile
[INFO]
[INFO] --- surefire:3.1.2:test (default-test) @ emp-demo1 ---
[INFO] No tests to run.
[INFO]
[INFO] --- war:3.4.0:war (default-war) @ emp-demo1 ---
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-utils/3.4.2/maven-shared-utils-3.4.2.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-utils/3.4.2/maven-shared-utils-3.4.2.pom (5.9 kB at 147 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-archiver/4.7.1/plexus-archiver-4.7.1.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-archiver/4.7.1/plexus-archiver-4.7.1.pom (6.5 kB at 225 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-io/3.4.1/plexus-io-3.4.1.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-io/3.4.1/plexus-io-3.4.1.pom (6.0 kB at 194 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.pom (22 kB at 575 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-parent/56/commons-parent-56.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-parent/56/commons-parent-56.pom (82 kB at 1.3 MB/s)
Downloading from central: https://repo.maven.apache.org/maven2/com/github/luben/zstd-jni/1.5.5-2/zstd-jni-1.5.5-2.pom
Downloaded from central: https://repo.maven.apache.org/maven2/com/github/luben/zstd-jni/1.5.5-2/zstd-jni-1.5.5-2.pom (1.9 kB at 36 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-mapping/3.0.0/maven-mapping-3.0.0.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-mapping/3.0.0/maven-mapping-3.0.0.pom (4.1 kB at 88 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-components/22/maven-shared-components-22.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-components/22/maven-shared-components-22.pom (5.1 kB at 109 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/27/maven-parent-27.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/27/maven-parent-27.pom (41 kB at 1.3 MB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/apache/17/apache-17.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/apache/17/apache-17.pom (16 kB at 535 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.pom (815 B at 15 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-containers/1.5.4/plexus-containers-1.5.4.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-containers/1.5.4/plexus-containers-1.5.4.pom (4.2 kB at 137 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus/2.0.5/plexus-2.0.5.pom
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus/2.0.5/plexus-2.0.5.pom (17 kB at 457 kB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-utils/3.4.2/maven-shared-utils-3.4.2.jar
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-shared-utils/3.4.2/maven-shared-utils-3.4.2.jar (151 kB at 2.4 MB/s)
Downloading from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-archiver/4.7.1/plexus-archiver-4.7.1.jar
Downloading from central: https://repo.maven.apache.org/maven2/com/github/luben/zstd-jni/1.5.5-2/zstd-jni-1.5.5-2.jar
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar
Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-mapping/3.0.0/maven-mapping-3.0.0.jar
Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-archiver/4.7.1/plexus-archiver-4.7.1.jar (221 kB at 1.9 MB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/shared/maven-mapping/3.0.0/maven-mapping-3.0.0.jar (11 kB at 92 kB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar (1.1 MB at 4.3 MB/s)
Downloaded from central: https://repo.maven.apache.org/maven2/com/github/luben/zstd-jni/1.5.5-2/zstd-jni-1.5.5-2.jar (5.9 MB at 2.8 MB/s)
[INFO] Packaging webapp
[INFO] Assembling webapp [emp-demo1] in [C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\target\emp-demo1-1.0]
[INFO] Processing war project
[INFO] Copying webapp resources [C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\src\main\webapp]
[INFO] Building war: C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo\target\emp-demo1-1.0.war
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  8.990 s
[INFO] Finished at: 2024-03-08T14:45:10+05:30
[INFO] ------------------------------------------------------------------------
 
C:\Users\HEMANTS7\Downloads\aws-kpit-main\aws-kpit-main\demos\11-beanstalk-javaweb\emp-demo>
 
 
TOMCAT 10 WITH JAVA 17
 
 
----------------------------------------------------------------------------------------------------------------------------------------------------------
https://github.com/mahendra-shinde/sample-library-api
 
 
Download the sample project
Build : mvn package -DskipTests
 
Run:
cd target
java -jar library-api-1.0.jar
 
To STop : Press CTRL+C
 
 
Deployed app:
http://library-api.us-east-1.elasticbeanstalk.com
 
BeanStalk :> Java-11 without tomcat
----------------------------------------------------------------------------------------------------------------------------------------------------------
import software.amazon.awssdk.core.sync.RequestBody;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.*;
import software.amazon.awssdk.services.s3.model.*;
import software.amazon.awssdk.services.sqs.*;
import software.amazon.awssdk.services.sqs.model.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
public class App{
    private static final String BUCKET_NAME = "shubham-219885";
    private static final String QUEUE_URL = "https://sqs.us-east-1.amazonaws.com/891377117529/shubham219885";
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // Accept a single line of text from the user
        System.out.print("Enter a line of text: ");
        String userInput = scanner.nextLine();
        // Generate a timestamp for the object key
        String timestamp = new SimpleDateFormat("yyyy-dd-MM-HH-mm-ss").format(new Date());
        String objectKey = timestamp + ".txt";
        // Upload the text to S3
        String s3ObjectUrl = uploadToS3(userInput, objectKey);
        // Send a message to SQS
        sendMessageToSQS(s3ObjectUrl);
        System.out.println("Process completed successfully.");
    }
    private static String uploadToS3(String text, String objectKey) {
        S3Client s3Client = S3Client.builder().region(Region.US_EAST_1).build();
        PutObjectResponse response = s3Client.putObject(PutObjectRequest.builder()
                .bucket(BUCKET_NAME)
                .key(objectKey)
                .build(), RequestBody.fromString(text));
        return s3Client.utilities().getUrl(GetUrlRequest.builder()
                .bucket(BUCKET_NAME)
                .key(objectKey)
                .build()).toExternalForm();
    }
    private static void sendMessageToSQS(String s3ObjectUrl) {
        SqsClient sqsClient = SqsClient.builder().region(Region.US_EAST_1).build();
        SendMessageResponse response = sqsClient.sendMessage(SendMessageRequest.builder()
                .queueUrl(QUEUE_URL)
                .messageBody("S3 Object URL: " + s3ObjectUrl)
                .build());
        System.out.println("Message sent to SQS. Message ID: " + response.messageId());
    }
}
 
 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Serverless :
-Deploying small application on server only when "triggered".
-As soon as "Execution" is completed, underplay the servers.
-cost reduction (consumption model).
-Built in "Scalable", multiple triggers results in multiple instances.
---They should not be used for traditional applications.
-Serverless "applications" are actually "single" tasks.
 
-Cloud Native Application
 
Application that "always" run in cloud.
 
-Vendor Lock In :
AWS Lamda run "entirely" in aws cloud.
Azure function run "entirely" in Microsoft azure cloud.
 
                                                                     LAMDA
Create function
midlle use blueprint
hello world function python
func nam: hem
Use existing role
--------------
lamda function code
private
event json : type input
{

}
 
Create lamda
use blueprint
from blueprint use hello world pyhton 3.0 
provide func name
then use existing role
 
choose existing role
create function
edit saved event
create testcase

